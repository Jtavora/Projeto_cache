services:
  auth:
    build: ./AUTH/back-end/
    volumes:
      - ./AUTH/back-end:/app
    ports:
      - "4000:4000"
    env_file:
      - ./AUTH/.env
    depends_on:
      - mongo
    environment:
      MONGO_URI: mongo://user:password@db:27017/mydatabase
    networks:
      - kong-net

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: mydatabase
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - kong-net
  
  log-monitoring:
    build: ./LogMonitoring
    ports:
      - "5255:5255"   # Expondo a porta 5255
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  # ou Production, conforme necessário
    depends_on:
      - redis
    networks:
      - kong-net

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - kong-net

  kong-database:
    image: postgres:13
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - kong-net

  kong-migrations:
    build: ./LogMonitoring/Kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
    volumes:
      - ./LogMonitoring/wait-for-it.sh:/wait-for-it.sh
    command: ["/wait-for-it.sh", "kong-database:5432", "--", "kong", "migrations", "bootstrap"]
    networks:
      - kong-net
    depends_on:
      - kong-database

  kong:
    build: ./LogMonitoring/Kong  # Usa a imagem com nc incluído
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: '0.0.0.0:8001, 0.0.0.0:8444 ssl'
    ports:
      - "8000:8000"   # Porta de proxy HTTP
      - "8443:8443"   # Porta de proxy HTTPS
      - "8001:8001"   # Porta de administração HTTP
      - "8444:8444"   # Porta de administração HTTPS
    networks:
      - kong-net
    depends_on:
      - kong-migrations
    
networks:
  kong-net:
    driver: bridge
  
volumes:
  kong_data: